status = warn
name= properties_configuration
# Give directory path where log files should get stored
property.basePath=./logs/

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.target = SYSTEM_OUT
appender.console.layout.type=PatternLayout
log4j.appender.A1.Encoding=UTF-8
# 指定日志的模式
appender.console.layout.pattern = %style{%d{yyyy-MM-dd HH:mm:ss.SSS}}{write} [%highlight{%thread}] %highlight{%-5level} %style{%c}{bright,Magenta} - %style{%msg}{bright,Green}%n


# RollingFileAppender 将打印文件中的日志，可以根据时间或大小轮换
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName=${basePath}app.log
appender.rolling.filePattern=${basePath}app_%d{yyyyMMdd}.log
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern = %style{%d{yyyy-MM-dd HH:mm:ss.SSS}}{write} [%highlight{%thread}] %highlight{%-5level} %style{%c}{bright,Magenta} - %style{%msg}{bright,Green}%n
appender.rolling.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# DELETE files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level=debug
rootLogger.additivity=false
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.console.ref = consoleLogger
