name:  Docker Release

on:
#  push:
#    tags: # 提交代码为tag 是以'v'开头的时候触发自动部署到服务端 如 git push tag v0.1.0
#      - 'v*'
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Run `uname -a` in Kunpeng env
        run: |
          uname -a
          cat /etc/os-release
          lscpu | grep -E "Architecture|Model name|CPU\(s\):"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Check Out Repo
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt-openj9'
      - run: java -version

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Build with Gradle
        run: ./gradlew shadowJar

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build test image and push
        id: docker_build_debian_test
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/aarch64/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_USERNAME }}/vertx-ddns:test
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: test Image digest
        run: echo ${{ steps.docker_build_debian.outputs.digest }}

      - name: Build debian image and push
        id: docker_build_debian
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/debian/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_USERNAME }}/vertx-ddns:debian
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build_debian.outputs.digest }}

      - name: Build alpine image and push
        id: docker_build_alpine
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/alpine/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_USERNAME }}/vertx-ddns:alpine
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build_alpine.outputs.digest }}

      - name: Build ubuntu image and push
        id: docker_build_ubuntu
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/ubuntu/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ secrets.DOCKER_USERNAME }}/vertx-ddns:ubuntu
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build_ubuntu.outputs.digest }}
